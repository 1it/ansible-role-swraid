---
  - include_tasks: validate.yml

  - name: Software RAID | Install mdadm and FS packages
    apt:
      name: "{{ item }}"
      state: latest
      update_cache: yes
    when: software_raid_devices is defined and ansible_os_family == "Debian"
    with_items:
      - mdadm
      - xfsprogs

  - name: Software RAID | Check existing RAID devices
    command:
      "mdadm -D {{ item.device }}"
    when: software_raid_devices is defined
    with_items: "{{ software_raid_devices }}"
    register: mdadm_check
    ignore_errors: yes
    changed_when: false

  - name: Software RAID | Create partitions
    parted:
      device: "{{ item.0.name }}"
      number: "{{ item.1.number }}"
      part_start: "{{ item.1.part_start | default(omit) }}"
      part_end: "{{ item.1.part_end | default(omit) }}"
      state: present
      flags: "{{ item.1.flags | default(['raid']) }}"
    with_subelements:
      - "{{ partitions }}"
      - volumes
    when: partitions is defined and item.1.number != 0


  - name: Software RAID | Initialise RAID devices
    command:
      "mdadm -v --create {{ item.0.device }} \ 
                --level={{ item.0.level }} \
                --raid-devices={{ item.0.components | length }} {{ item.0.components | join(' ') }} {{ software_raid_create_kwargs }}"
    with_together:
      - "{{ software_raid_devices }}"
      - "{{ mdadm_check.results }}"
    when: software_raid_devices is defined and item.1.rc != 0

  - name: Software RAID | Scan RAID devices
    command:
      "mdadm --detail --scan"
    when: software_raid_devices is defined
    register: mdadm_scan
    ignore_errors: yes
    changed_when: false

  - name: Software RAID | Create mdadm config file
    template:
      src: mdadm.conf.j2
      dest: /etc/mdadm/mdadm.conf
      backup: yes
    when: software_raid_devices is defined

  - name: Software RAID | Update initramfs
    command: "update-initramfs -u"
    when: software_raid_devices is defined and ansible_os_family == "Debian"
    ignore_errors: yes
    changed_when: false

  - name: Software RAID | Filesystem creation
    filesystem:
      fstype: "{{ item.filesystem_type }}"
      dev: "{{ item.device }}"
    with_items: "{{ software_raid_devices }}"
    when: software_raid_devices is defined and item.mount_point is defined

  - name: Software RAID | mount RAID devices
    mount:
      name: "{{ item.mount_point }}"
      src: "{{ item.device }}"
      fstype: "{{ item.filesystem_type }}"
      opts: "{{ item.mount_options }}"
      dump: "{{ item.dump }}"
      passno: "{{ item.passno }}"
      state: mounted
    with_items: "{{ software_raid_devices }}"
    when: software_raid_devices is defined and item.mount_point is defined
